//@version=6
strategy("學習用59", overlay=true, format = format.price)

if high < low 
    strategy.entry(".", strategy.short )

// ■■■■■■ 開始交易日期
start_M = input.int(9)
start_D = input.int(1)
bool tr_flag = time>= timestamp("UTC+8", 2025,start_M,start_D,00,00)


// ■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ ■■■■■■ 畫線 & 條件
// ■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ 輸入數字 畫快慢線 條件
int input_qu = input.int(10)
int input_sl = input.int(20)
// ■■■■■■ 快慢線 顏色
color coqu = input.color(color.blue)
color cosl = input.color(color.yellow)
// ■■■■■■ 畫快慢線
qu = ta.ema(close, input_qu)
sl = ta.ema(close, input_sl)
plot(qu, color = coqu) 
plot(sl, color = cosl) 

// ■■■■■■ 確立上下穿條件
bool qu_up = ta.crossover (qu, sl)
bool qu_do = ta.crossunder(qu, sl)


//■■■■■■■■■   ⍢⎵⍢ 確定 哪些線段 哪些訊號 哪些變數 在哪裏是na 在哪裏是多少值



// ■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ 上下穿標記

// ■■■■■■ 標記的顏色
color co_flag = color(na) 
if qu_up
    co_flag := color.green
else if qu_do
    co_flag := color.red

// ■■■■■■ 畫標記
plotshape(
  series = close + 1,
  size = size.normal,
  color = co_flag,
  style = shape.circle  
  )

// ■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ ■■■■■■ 交易輸入

// ■■■■■■ 止營止損點位線 輸入
delta_num = input.int(10)
delta_per = input.float(1.0)


// ■■■■■■ delta_p 每K變換
delta_p = (ta.highest(high, delta_num) - ta.lowest(low, delta_num))*delta_per,
// ■■■■■■ delta 有up / do 才有 
var delta = float(na)
if qu_up or qu_do
    delta := delta_p


// ■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ ■■■■■■ 交易動作

if tr_flag //如果過了開始交易日期
    if qu_up
        strategy.entry('long',  strategy.long, 1)
        strategy.exit("close_long", "long", 
                       qty_percent = 100, 
                       limit = strategy.position_avg_price + delta,
                       stop  = strategy.position_avg_price - delta
                       )        
        label.new(bar_index, high + 0.5, color = color.blue, size = size.small )

//■■■■■■■■■  ▲✔✘  系列值 的統計是來自每一次被呼叫 而不是每一根K線

    else if qu_do
        strategy.entry('short', strategy.short, 1)
        strategy.exit("close_short", "short", 
                       qty_percent = 100, 
                       limit = strategy.position_avg_price - delta,
                       stop  = strategy.position_avg_price + delta
                       )        
        label.new(bar_index, low - 0.5, color = color.yellow, size = size.small )

// ■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ ■■■■■■■■■■■■■■■■■■■■■■■■ ■■■■■■ 繪製確認線


// ■■■■■■ strategy.position_avg_price 入場均價
var position_avg_price = float(na)
if strategy.position_size != 0
    position_avg_price := strategy.position_avg_price
else
    position_avg_price := float(na)
// ■■■■■■ 繪製 入場均價
plot(position_avg_price, color = color.orange, linewidth=6, style= plot.style_linebr ) 



// ■■■■■■ 止營止損線 繪圖
var aline = float(na)
var bline = float(na)

if strategy.position_size != 0 or qu_up or qu_do
    aline := strategy.position_avg_price + delta
    bline := strategy.position_avg_price - delta
else
    aline := float(na)
    bline := float(na)
plot(aline, color = color.olive, linewidth=3, style= plot.style_linebr ) 
plot(bline, color = color.olive, linewidth=3, style= plot.style_linebr ) 





